[{"/Users/tong/Programming/Tymphany-bidding/tymphany-bidding/src/index.js":"1","/Users/tong/Programming/Tymphany-bidding/tymphany-bidding/src/Bidding.js":"2","/Users/tong/Programming/Tymphany-bidding/tymphany-bidding/src/components/Header.js":"3","/Users/tong/Programming/Tymphany-bidding/tymphany-bidding/src/components/Product.js":"4","/Users/tong/Programming/Tymphany-bidding/tymphany-bidding/src/components/BiddingInfo.js":"5","/Users/tong/Programming/Tymphany-bidding/tymphany-bidding/src/components/DetailInfo.js":"6"},{"size":302,"mtime":1612100354610,"results":"7","hashOfConfig":"8"},{"size":1125,"mtime":1612288146568,"results":"9","hashOfConfig":"8"},{"size":878,"mtime":1612319244375,"results":"10","hashOfConfig":"8"},{"size":3668,"mtime":1612316311265,"results":"11","hashOfConfig":"8"},{"size":3705,"mtime":1612316378262,"results":"12","hashOfConfig":"8"},{"size":1558,"mtime":1612288526898,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"16kawa",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/Users/tong/Programming/Tymphany-bidding/tymphany-bidding/src/index.js",[],["31","32"],"/Users/tong/Programming/Tymphany-bidding/tymphany-bidding/src/Bidding.js",["33","34","35"],"import React, { useEffect } from 'react';\nimport Headers from './components/Header'\nimport Product from './components/Product'\nimport { \n  Segment,\n  Loader\n} from 'semantic-ui-react'\nimport axios from 'axios' \n\n\nfunction Bidding (props) {\n  const [data, setData] = React.useState({});\n  const [info, setInfo] = React.useState({name: '', number: ''});\n  const [timeOut, setTimeOut] = React.useState(false)\n\n  const fetchResource = async() => {\n    const res = await axios.get(\n      'https://tymphany-bidding-server.herokuapp.com/api/bidding'\n    )\n    // const res = await axios.get(\n    //   'http://localhost:5000/api/bidding'\n    // )\n    console.log('fetchResource', res)\n    setData(res.data.content)\n  }\n  useEffect(() => { \n    fetchResource();\n  }, [])\n\n  const hangleTimeOut = () => {\n    console.log('timeOut')\n    setTimeOut(true);\n  }\n\n  return (\n    <div className=\"App\">\n      <Headers timeOut={timeOut} hangleTimeOut={hangleTimeOut}/>\n        <Segment.Group horizontal textAlign='center' >\n          <Product timeOut={timeOut} data={data}/>\n        </Segment.Group>\n    </div>\n  );\n}\n\nexport default Bidding;\n","/Users/tong/Programming/Tymphany-bidding/tymphany-bidding/src/components/Header.js",[],"/Users/tong/Programming/Tymphany-bidding/tymphany-bidding/src/components/Product.js",["36","37","38","39","40"],"import React, { useEffect } from 'react'\nimport axios from 'axios'\nimport moment from 'moment' \nimport { \n  Image, \n  Icon,\n  Button,\n  Divider,\n  Loader,\n  Message,\n} from 'semantic-ui-react'\nimport BiddingInfo from './BiddingInfo'\nimport DetailInfo from './DetailInfo'\n\n\nfunction Product(props) {\n  const [showDetail, setDetail] = React.useState(-1);\n  const [showBid, setBid] = React.useState(-1);\n  const [data, setData] = React.useState({});\n  const fetchResource = async() => {\n    const res = await axios.get(\n      'https://tymphany-bidding-server.herokuapp.com/api/bidding'\n    )\n    console.log('fetchResource', res)\n    setData(res.data.content)\n  }\n  useEffect(() => { \n    fetchResource();\n  }, [])\n\n  const handleOnClickDetail = (event) => {\n    setDetail(event.target.name)\n    setBid(-1)\n  }\n  const handleOnClickBid= (event) => {\n    setBid(event.target.name)\n    setDetail(-1)\n  }\n  const chevronUp = () => {\n    setBid(-1)\n    setDetail(-1)\n  }\n\n  const submitFinish = () => { \n    setBid(-1);\n    fetchResource();\n  }\n\n  const Card = ({data, index} ) => {\n    const biddingData = data.bidding\n    biddingData.sort(function(a, b) {\n        return (b.price - a.price)\n    });\n\n    const heighestPrice_title = biddingData.length > 0? `即時出價 Current Bid $ `: '尚未有人出價 Starting Bid $ '\n    const heighestPrice = biddingData.length > 0? `${biddingData[0].price}`: `${data.basic_price}`\n    \n    return (\n      <div className='tg_card' >\n        <div className='img-content'>\n          <Image className='img' centered src={process.env.PUBLIC_URL+ `/img/${data._no}.jpg`}/>\n        </div>\n        <div style={{ height: 'fit-content' }}>\n          <h5 className='brand'> {`#${data._no} ${data.module}`}</h5>\n          <div style={{display:'flex', flexDirection: 'row', justifyContent:\"space-between\"}}>\n            <p>{data.brand}</p>\n            <p style={{marginRight: '8px'}}>pcs: {data.pcs}</p>\n          </div>\n          {data.set.length>0 && <p className='set'>set with: {data.set}</p>}\n        </div>\n        <Divider />\n        <div>\n          <p className='price-title'> {heighestPrice_title} <strong style={{fontSize: '18px', color: '#0077aa' }}> {heighestPrice} </strong></p>\n        </div>\n        <div className='operations-buttons'>\n          <Button inverted color='blue' className='operation-button' name={index} onClick={handleOnClickDetail}> View Details </Button>\n          <Button inverted color='red' className='operation-button' name={index} onClick={handleOnClickBid}> Bid Now </Button>\n          {(index == showDetail || index == showBid) && \n            <Icon name=\"chevron up\" bordered onClick={chevronUp}\n              style={{minWidth: '30px', margin: 'auto', borderRadius: '3px'}} />}\n        </div>\n        {index == showDetail && <DetailInfo data={data} biddingData={biddingData} />}\n        {index == showBid &&\n          (props.timeOut?\n            <Message\n              info\n              header={`得標者 (Winner)： ${biddingData.length > 0? biddingData[0].name: '無'}`}\n              content={`得標金額 (Endding Price): ${heighestPrice}`}\n            />\n          :\n          <BiddingInfo basic_price={data.basic_price} _no={data._no} submitFinish={submitFinish}/>\n        )}\n      </div>   \n    )\n  }\n\n  return (\n    <>\n      {data.length > 0 ? \n        data.map((_d, index) => <Card data={_d} index={index} />)\n      :\n        <div className='loader-container' >\n          <Loader active inline='centered' className='loader' />\n          <span style={{margin: '16px', color: '#485146'}}>Loading... (about 30 seconds)</span>\n        </div>\n      }\n    </>\n    \n  );\n}\n\nexport default Product;\n","/Users/tong/Programming/Tymphany-bidding/tymphany-bidding/src/components/BiddingInfo.js",["41"],"import React from 'react'\nimport axios from 'axios'\n\nimport { \n  Grid, \n  Form, \n  Statistic,\n  Button,\n  Message,\n  Label,\n  Input\n} from 'semantic-ui-react'\n\n\nfunction BiddingInfo(props) {\n  const [info, setInfo] = React.useState({name: '', number: '', email:'', price: ''});\n  const [inputLessThanBasic, setLessThanBasic] = React.useState(false)\n  const handleChange = (e , { name, value }) => {\n    const newInfo = info;\n    newInfo[name] = value;\n    setInfo(newInfo);\n    setLessThanBasic(false)\n  }\n  const handleSubmit = async () => {\n    let inputValid = true;\n    const emailFormat = /^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/;\n    if ( !/./.test(info.name) || !/[0-9]{7}/.test(info.number) || \n        !emailFormat.test(info.email) || \n        !/^\\d*[05]{1}0$/.test(info.price))\n      inputValid = false\n\n    if (info.price - props.basic_price < 0) {\n      inputValid = false\n      setLessThanBasic(true)\n    }\n    const updateData = {\n        _no: props._no,\n        updateContent: {\n            bidding: {\n                ...info,\n                time: Date.now()\n            }\n        }\n    }\n    if (inputValid) submitBidding(updateData)\n    else console.log(\"not complete\")\n  }\n  const submitBidding = async (data) => {\n    return await axios.post('https://tymphany-bidding-server.herokuapp.com/api/bidding/append', \n      data, \n      {'Content-Type': 'application/json'})\n        .then((response) => {\n          props.submitFinish();\n          console.log(response)\n        })\n        .catch((error) => {\n          console.log(error)\n      })\n  }\n  return (\n    <Grid horizontal >\n      <Form error style={{  margin: '30px auto' }} >\n      <Form.Field>\n        <label id='movie'>姓名 (Name)</label>\n        <Form.Input\n          required={true}\n          placeholder='ex. Tong Wang'\n          name='name'\n          onChange={handleChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <label>工號 (EmployeeID)</label>\n        <Form.Input\n          required={true}\n          pattern=\"[0-9]{7}\"\n          placeholder='ex. 2000xxx'\n          name='number'\n          onChange={handleChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <label>Email </label>\n        <Form.Input\n          required={true}\n          type='email'\n          placeholder='ex. tong.wang@tymphany.com'\n          name='email'\n          onChange={handleChange}\n        />\n      </Form.Field>\n      <Form.Field >\n        <label>出價 (Bid Price) </label>\n        <div className=\"price-container\">\n          <Statistic color='red' size='small' className=\"price-basic\">\n              <Statistic.Value>{props.basic_price}</Statistic.Value>\n              <Statistic.Label>底價  <br />Base price</Statistic.Label>\n          </Statistic>\n          <div className=\"price-input\">\n            <Input \n              required={true}\n              pattern=\"^\\d*[05]{1}0$\"\n              name='price'\n              title=\"請以50元為單位出價。\"\n              labelPosition='left' type='text'\n              onChange={handleChange}\n              placeholder={`ex. ${props.basic_price}`}\n              >\n              <Label basic>$</Label>\n              <input />\n            </Input>\n            <span className=\"caption\">*請以50元為單位出價 <br />Price must be in multiples of 50</span>\n          </div>\n        </div>\n        \n\n        \n      </Form.Field>\n      {inputLessThanBasic && <Message\n        error\n        header='請輸入高於底價的數目'\n        content=\"Price must be higher than base price\"\n      />}\n      \n      <Button type='submit' onClick={handleSubmit}>Submit</Button>\n    </Form>\n    </Grid>\n  )\n}\n\nexport default BiddingInfo;\n","/Users/tong/Programming/Tymphany-bidding/tymphany-bidding/src/components/DetailInfo.js",["42","43","44","45","46","47","48","49"],"import React, { useEffect } from 'react'\nimport axios from 'axios'\n\nimport { \n  Image, \n  Icon,\n  Button,\n  Divider,\n  Loader,\n  Message\n} from 'semantic-ui-react'\n\n\nfunction DetailInfo(props) {\n  const [biddingData, setData] = React.useState(props.biddingData)\n  const fetchResource = async() => {\n    const res = await axios.get(\n      `https://tymphany-bidding-server.herokuapp.com/api/bidding?_no=${props.data._no}`\n    )\n    setData(res.data.content[0].bidding)\n  }\n  useEffect(() => { \n    fetchResource();\n  }, [])  \n  \n  return (\n    <>\n      <div className='detail'>\n        <span className='conditions'><strong> Check: </strong>{props.data.conditions}</span>\n        <p className='shortage'><strong> Shortage: </strong> {props.data.shortage}</p>\n      </div>\n      {/* <Divider horizontal>History</Divider>\n      <List divided relaxed className='bidding'>\n        {biddingData.length > 0 && biddingData.map((_d, index) => {\n          return(\n            <List.Item>\n              <List.Content floated='right'>\n                  <h5 className='bidding-name'>${_d.price}</h5>\n              </List.Content>\n              <List.Icon name='dollar' size='large' verticalAlign='middle' />\n              \n              <List.Content>\n                  <h5 className='bidding-name'>{_d.name}</h5>\n                  <p className='bidding-time'>{moment(_d.time).format(\"MMMM Do YYYY, h:mm:ss a\")}</p>\n                \n              </List.Content>\n            </List.Item>\n          )\n        })} \n      </List> */}\n    </>\n  )\n}\n\nexport default DetailInfo;\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":6,"column":3,"nodeType":"56","messageId":"57","endLine":6,"endColumn":9},{"ruleId":"54","severity":1,"message":"58","line":13,"column":10,"nodeType":"56","messageId":"57","endLine":13,"endColumn":14},{"ruleId":"54","severity":1,"message":"59","line":13,"column":16,"nodeType":"56","messageId":"57","endLine":13,"endColumn":23},{"ruleId":"54","severity":1,"message":"60","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":78,"column":19,"nodeType":"63","messageId":"64","endLine":78,"endColumn":21},{"ruleId":"61","severity":1,"message":"62","line":78,"column":42,"nodeType":"63","messageId":"64","endLine":78,"endColumn":44},{"ruleId":"61","severity":1,"message":"62","line":82,"column":16,"nodeType":"63","messageId":"64","endLine":82,"endColumn":18},{"ruleId":"61","severity":1,"message":"62","line":83,"column":16,"nodeType":"63","messageId":"64","endLine":83,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":26,"column":47,"nodeType":"67","messageId":"68","endLine":26,"endColumn":48,"suggestions":"69"},{"ruleId":"54","severity":1,"message":"70","line":5,"column":3,"nodeType":"56","messageId":"57","endLine":5,"endColumn":8},{"ruleId":"54","severity":1,"message":"71","line":6,"column":3,"nodeType":"56","messageId":"57","endLine":6,"endColumn":7},{"ruleId":"54","severity":1,"message":"72","line":7,"column":3,"nodeType":"56","messageId":"57","endLine":7,"endColumn":9},{"ruleId":"54","severity":1,"message":"73","line":8,"column":3,"nodeType":"56","messageId":"57","endLine":8,"endColumn":10},{"ruleId":"54","severity":1,"message":"55","line":9,"column":3,"nodeType":"56","messageId":"57","endLine":9,"endColumn":9},{"ruleId":"54","severity":1,"message":"74","line":10,"column":3,"nodeType":"56","messageId":"57","endLine":10,"endColumn":10},{"ruleId":"54","severity":1,"message":"75","line":15,"column":10,"nodeType":"56","messageId":"57","endLine":15,"endColumn":21},{"ruleId":"76","severity":1,"message":"77","line":24,"column":6,"nodeType":"78","endLine":24,"endColumn":8,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","'info' is assigned a value but never used.","'setInfo' is assigned a value but never used.","'moment' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\@.","Literal","unnecessaryEscape",["82","83"],"'Image' is defined but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'Message' is defined but never used.","'biddingData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchResource'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-global-assign","no-unsafe-negation",{"messageId":"85","fix":"86","desc":"87"},{"messageId":"88","fix":"89","desc":"90"},{"desc":"91","fix":"92"},"removeEscape",{"range":"93","text":"94"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"95","text":"96"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [fetchResource]",{"range":"97","text":"98"},[616,617],"",[616,616],"\\",[518,520],"[fetchResource]"]